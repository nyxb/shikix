/**
 * Generated by scripts/prepare.ts
 */
import type { LanguageRegistration } from '../types'

type DynamicLangReg = () => Promise<{ default: LanguageRegistration[] }>

export const bundledLanguagesBase = {
  'abap': (() => import('./langs/abap')) as DynamicLangReg,
  'actionscript-3': (() => import('./langs/actionscript-3')) as DynamicLangReg,
  'ada': (() => import('./langs/ada')) as DynamicLangReg,
  'apache': (() => import('./langs/apache')) as DynamicLangReg,
  'apex': (() => import('./langs/apex')) as DynamicLangReg,
  'apl': (() => import('./langs/apl')) as DynamicLangReg,
  'applescript': (() => import('./langs/applescript')) as DynamicLangReg,
  'ara': (() => import('./langs/ara')) as DynamicLangReg,
  'asm': (() => import('./langs/asm')) as DynamicLangReg,
  'astro': (() => import('./langs/astro')) as DynamicLangReg,
  'awk': (() => import('./langs/awk')) as DynamicLangReg,
  'ballerina': (() => import('./langs/ballerina')) as DynamicLangReg,
  'bat': (() => import('./langs/bat')) as DynamicLangReg,
  'beancount': (() => import('./langs/beancount')) as DynamicLangReg,
  'berry': (() => import('./langs/berry')) as DynamicLangReg,
  'bibtex': (() => import('./langs/bibtex')) as DynamicLangReg,
  'bicep': (() => import('./langs/bicep')) as DynamicLangReg,
  'blade': (() => import('./langs/blade')) as DynamicLangReg,
  'c': (() => import('./langs/c')) as DynamicLangReg,
  'cadence': (() => import('./langs/cadence')) as DynamicLangReg,
  'clarity': (() => import('./langs/clarity')) as DynamicLangReg,
  'clojure': (() => import('./langs/clojure')) as DynamicLangReg,
  'cmake': (() => import('./langs/cmake')) as DynamicLangReg,
  'cobol': (() => import('./langs/cobol')) as DynamicLangReg,
  'codeql': (() => import('./langs/codeql')) as DynamicLangReg,
  'coffee': (() => import('./langs/coffee')) as DynamicLangReg,
  'cpp': (() => import('./langs/cpp')) as DynamicLangReg,
  'crystal': (() => import('./langs/crystal')) as DynamicLangReg,
  'csharp': (() => import('./langs/csharp')) as DynamicLangReg,
  'css': (() => import('./langs/css')) as DynamicLangReg,
  'cue': (() => import('./langs/cue')) as DynamicLangReg,
  'cypher': (() => import('./langs/cypher')) as DynamicLangReg,
  'd': (() => import('./langs/d')) as DynamicLangReg,
  'dart': (() => import('./langs/dart')) as DynamicLangReg,
  'dax': (() => import('./langs/dax')) as DynamicLangReg,
  'diff': (() => import('./langs/diff')) as DynamicLangReg,
  'docker': (() => import('./langs/docker')) as DynamicLangReg,
  'dream-maker': (() => import('./langs/dream-maker')) as DynamicLangReg,
  'elixir': (() => import('./langs/elixir')) as DynamicLangReg,
  'elm': (() => import('./langs/elm')) as DynamicLangReg,
  'erb': (() => import('./langs/erb')) as DynamicLangReg,
  'erlang': (() => import('./langs/erlang')) as DynamicLangReg,
  'fish': (() => import('./langs/fish')) as DynamicLangReg,
  'fsharp': (() => import('./langs/fsharp')) as DynamicLangReg,
  'gdresource': (() => import('./langs/gdresource')) as DynamicLangReg,
  'gdscript': (() => import('./langs/gdscript')) as DynamicLangReg,
  'gdshader': (() => import('./langs/gdshader')) as DynamicLangReg,
  'gherkin': (() => import('./langs/gherkin')) as DynamicLangReg,
  'git-commit': (() => import('./langs/git-commit')) as DynamicLangReg,
  'git-rebase': (() => import('./langs/git-rebase')) as DynamicLangReg,
  'glimmer-js': (() => import('./langs/glimmer-js')) as DynamicLangReg,
  'glimmer-ts': (() => import('./langs/glimmer-ts')) as DynamicLangReg,
  'glsl': (() => import('./langs/glsl')) as DynamicLangReg,
  'gnuplot': (() => import('./langs/gnuplot')) as DynamicLangReg,
  'go': (() => import('./langs/go')) as DynamicLangReg,
  'graphql': (() => import('./langs/graphql')) as DynamicLangReg,
  'groovy': (() => import('./langs/groovy')) as DynamicLangReg,
  'hack': (() => import('./langs/hack')) as DynamicLangReg,
  'haml': (() => import('./langs/haml')) as DynamicLangReg,
  'handlebars': (() => import('./langs/handlebars')) as DynamicLangReg,
  'haskell': (() => import('./langs/haskell')) as DynamicLangReg,
  'hcl': (() => import('./langs/hcl')) as DynamicLangReg,
  'hjson': (() => import('./langs/hjson')) as DynamicLangReg,
  'hlsl': (() => import('./langs/hlsl')) as DynamicLangReg,
  'html': (() => import('./langs/html')) as DynamicLangReg,
  'http': (() => import('./langs/http')) as DynamicLangReg,
  'imba': (() => import('./langs/imba')) as DynamicLangReg,
  'ini': (() => import('./langs/ini')) as DynamicLangReg,
  'java': (() => import('./langs/java')) as DynamicLangReg,
  'javascript': (() => import('./langs/javascript')) as DynamicLangReg,
  'jinja-html': (() => import('./langs/jinja-html')) as DynamicLangReg,
  'jison': (() => import('./langs/jison')) as DynamicLangReg,
  'json': (() => import('./langs/json')) as DynamicLangReg,
  'json5': (() => import('./langs/json5')) as DynamicLangReg,
  'jsonc': (() => import('./langs/jsonc')) as DynamicLangReg,
  'jsonl': (() => import('./langs/jsonl')) as DynamicLangReg,
  'jsonnet': (() => import('./langs/jsonnet')) as DynamicLangReg,
  'jssm': (() => import('./langs/jssm')) as DynamicLangReg,
  'jsx': (() => import('./langs/jsx')) as DynamicLangReg,
  'julia': (() => import('./langs/julia')) as DynamicLangReg,
  'kotlin': (() => import('./langs/kotlin')) as DynamicLangReg,
  'kusto': (() => import('./langs/kusto')) as DynamicLangReg,
  'latex': (() => import('./langs/latex')) as DynamicLangReg,
  'less': (() => import('./langs/less')) as DynamicLangReg,
  'liquid': (() => import('./langs/liquid')) as DynamicLangReg,
  'lisp': (() => import('./langs/lisp')) as DynamicLangReg,
  'logo': (() => import('./langs/logo')) as DynamicLangReg,
  'lua': (() => import('./langs/lua')) as DynamicLangReg,
  'make': (() => import('./langs/make')) as DynamicLangReg,
  'markdown': (() => import('./langs/markdown')) as DynamicLangReg,
  'marko': (() => import('./langs/marko')) as DynamicLangReg,
  'matlab': (() => import('./langs/matlab')) as DynamicLangReg,
  'mdc': (() => import('./langs/mdc')) as DynamicLangReg,
  'mdx': (() => import('./langs/mdx')) as DynamicLangReg,
  'mermaid': (() => import('./langs/mermaid')) as DynamicLangReg,
  'mojo': (() => import('./langs/mojo')) as DynamicLangReg,
  'narrat': (() => import('./langs/narrat')) as DynamicLangReg,
  'nextflow': (() => import('./langs/nextflow')) as DynamicLangReg,
  'nginx': (() => import('./langs/nginx')) as DynamicLangReg,
  'nim': (() => import('./langs/nim')) as DynamicLangReg,
  'nix': (() => import('./langs/nix')) as DynamicLangReg,
  'objective-c': (() => import('./langs/objective-c')) as DynamicLangReg,
  'objective-cpp': (() => import('./langs/objective-cpp')) as DynamicLangReg,
  'ocaml': (() => import('./langs/ocaml')) as DynamicLangReg,
  'pascal': (() => import('./langs/pascal')) as DynamicLangReg,
  'perl': (() => import('./langs/perl')) as DynamicLangReg,
  'php': (() => import('./langs/php')) as DynamicLangReg,
  'plsql': (() => import('./langs/plsql')) as DynamicLangReg,
  'postcss': (() => import('./langs/postcss')) as DynamicLangReg,
  'powerquery': (() => import('./langs/powerquery')) as DynamicLangReg,
  'powershell': (() => import('./langs/powershell')) as DynamicLangReg,
  'prisma': (() => import('./langs/prisma')) as DynamicLangReg,
  'prolog': (() => import('./langs/prolog')) as DynamicLangReg,
  'proto': (() => import('./langs/proto')) as DynamicLangReg,
  'pug': (() => import('./langs/pug')) as DynamicLangReg,
  'puppet': (() => import('./langs/puppet')) as DynamicLangReg,
  'purescript': (() => import('./langs/purescript')) as DynamicLangReg,
  'python': (() => import('./langs/python')) as DynamicLangReg,
  'r': (() => import('./langs/r')) as DynamicLangReg,
  'raku': (() => import('./langs/raku')) as DynamicLangReg,
  'razor': (() => import('./langs/razor')) as DynamicLangReg,
  'reg': (() => import('./langs/reg')) as DynamicLangReg,
  'rel': (() => import('./langs/rel')) as DynamicLangReg,
  'riscv': (() => import('./langs/riscv')) as DynamicLangReg,
  'rst': (() => import('./langs/rst')) as DynamicLangReg,
  'ruby': (() => import('./langs/ruby')) as DynamicLangReg,
  'rust': (() => import('./langs/rust')) as DynamicLangReg,
  'sas': (() => import('./langs/sas')) as DynamicLangReg,
  'sass': (() => import('./langs/sass')) as DynamicLangReg,
  'scala': (() => import('./langs/scala')) as DynamicLangReg,
  'scheme': (() => import('./langs/scheme')) as DynamicLangReg,
  'scss': (() => import('./langs/scss')) as DynamicLangReg,
  'shaderlab': (() => import('./langs/shaderlab')) as DynamicLangReg,
  'shellscript': (() => import('./langs/shellscript')) as DynamicLangReg,
  'shellsession': (() => import('./langs/shellsession')) as DynamicLangReg,
  'smalltalk': (() => import('./langs/smalltalk')) as DynamicLangReg,
  'solidity': (() => import('./langs/solidity')) as DynamicLangReg,
  'sparql': (() => import('./langs/sparql')) as DynamicLangReg,
  'splunk': (() => import('./langs/splunk')) as DynamicLangReg,
  'sql': (() => import('./langs/sql')) as DynamicLangReg,
  'ssh-config': (() => import('./langs/ssh-config')) as DynamicLangReg,
  'stata': (() => import('./langs/stata')) as DynamicLangReg,
  'stylus': (() => import('./langs/stylus')) as DynamicLangReg,
  'svelte': (() => import('./langs/svelte')) as DynamicLangReg,
  'swift': (() => import('./langs/swift')) as DynamicLangReg,
  'system-verilog': (() => import('./langs/system-verilog')) as DynamicLangReg,
  'tasl': (() => import('./langs/tasl')) as DynamicLangReg,
  'tcl': (() => import('./langs/tcl')) as DynamicLangReg,
  'tex': (() => import('./langs/tex')) as DynamicLangReg,
  'toml': (() => import('./langs/toml')) as DynamicLangReg,
  'tsx': (() => import('./langs/tsx')) as DynamicLangReg,
  'turtle': (() => import('./langs/turtle')) as DynamicLangReg,
  'twig': (() => import('./langs/twig')) as DynamicLangReg,
  'typescript': (() => import('./langs/typescript')) as DynamicLangReg,
  'v': (() => import('./langs/v')) as DynamicLangReg,
  'vb': (() => import('./langs/vb')) as DynamicLangReg,
  'verilog': (() => import('./langs/verilog')) as DynamicLangReg,
  'vhdl': (() => import('./langs/vhdl')) as DynamicLangReg,
  'viml': (() => import('./langs/viml')) as DynamicLangReg,
  'vue': (() => import('./langs/vue')) as DynamicLangReg,
  'vue-html': (() => import('./langs/vue-html')) as DynamicLangReg,
  'vyper': (() => import('./langs/vyper')) as DynamicLangReg,
  'wasm': (() => import('./langs/wasm')) as DynamicLangReg,
  'wenyan': (() => import('./langs/wenyan')) as DynamicLangReg,
  'wgsl': (() => import('./langs/wgsl')) as DynamicLangReg,
  'wolfram': (() => import('./langs/wolfram')) as DynamicLangReg,
  'xml': (() => import('./langs/xml')) as DynamicLangReg,
  'xsl': (() => import('./langs/xsl')) as DynamicLangReg,
  'yaml': (() => import('./langs/yaml')) as DynamicLangReg,
  'zenscript': (() => import('./langs/zenscript')) as DynamicLangReg,
  'zig': (() => import('./langs/zig')) as DynamicLangReg
}

export const bundledLanguagesAlias = {
  'bash': bundledLanguagesBase['shellscript'],
  'batch': bundledLanguagesBase['bat'],
  'be': bundledLanguagesBase['berry'],
  'c#': bundledLanguagesBase['csharp'],
  'c++': bundledLanguagesBase['cpp'],
  'cdc': bundledLanguagesBase['cadence'],
  'clj': bundledLanguagesBase['clojure'],
  'cmd': bundledLanguagesBase['vb'],
  'console': bundledLanguagesBase['shellsession'],
  'cql': bundledLanguagesBase['cypher'],
  'cs': bundledLanguagesBase['csharp'],
  'dockerfile': bundledLanguagesBase['docker'],
  'erl': bundledLanguagesBase['erlang'],
  'f#': bundledLanguagesBase['fsharp'],
  'fs': bundledLanguagesBase['fsharp'],
  'fsl': bundledLanguagesBase['jssm'],
  'gjs': bundledLanguagesBase['glimmer-js'],
  'gql': bundledLanguagesBase['graphql'],
  'gts': bundledLanguagesBase['glimmer-ts'],
  'hbs': bundledLanguagesBase['handlebars'],
  'hs': bundledLanguagesBase['haskell'],
  'jade': bundledLanguagesBase['pug'],
  'js': bundledLanguagesBase['javascript'],
  'kql': bundledLanguagesBase['kusto'],
  'kt': bundledLanguagesBase['kotlin'],
  'kts': bundledLanguagesBase['kotlin'],
  'makefile': bundledLanguagesBase['make'],
  'md': bundledLanguagesBase['markdown'],
  'nar': bundledLanguagesBase['narrat'],
  'nf': bundledLanguagesBase['nextflow'],
  'objc': bundledLanguagesBase['objective-c'],
  'perl6': bundledLanguagesBase['raku'],
  'properties': bundledLanguagesBase['ini'],
  'ps': bundledLanguagesBase['powershell'],
  'ps1': bundledLanguagesBase['powershell'],
  'py': bundledLanguagesBase['python'],
  'ql': bundledLanguagesBase['codeql'],
  'rb': bundledLanguagesBase['ruby'],
  'rs': bundledLanguagesBase['rust'],
  'sh': bundledLanguagesBase['shellscript'],
  'shader': bundledLanguagesBase['shaderlab'],
  'shell': bundledLanguagesBase['shellscript'],
  'spl': bundledLanguagesBase['splunk'],
  'styl': bundledLanguagesBase['stylus'],
  'ts': bundledLanguagesBase['typescript'],
  'vim': bundledLanguagesBase['viml'],
  'vimscript': bundledLanguagesBase['viml'],
  'vy': bundledLanguagesBase['vyper'],
  'yml': bundledLanguagesBase['yaml'],
  'zsh': bundledLanguagesBase['shellscript'],
  '文言': bundledLanguagesBase['wenyan']
}

export const bundledLanguages = {
  ...bundledLanguagesBase,
  ...bundledLanguagesAlias,
}
